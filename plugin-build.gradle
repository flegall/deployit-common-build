commonBuildPath = hasProperty("localCommonBuildRepo") ? file(localCommonBuildRepo).toURL().toString() : 'https://github.com/xebialabs/deployit-common-build/raw/3.6.x-maintenance'
apply from: "$commonBuildPath/dependencies.gradle"

defaultTasks 'build'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'com.xebialabs.deployit.plugins'
sourceCompatibility = 1.6
targetCompatibility = 1.6

configurations {
	compile {
		transitive = false
	}
}

dependencies {
	compile deps.deployit_udm_plugin_api
	compile deps.guava
	compile deps.slf4j_api

	testCompile deps.deployit_udm_test_support
	testCompile deps.hamcrest_core, deps.junit, deps.hamcrest_lib

	testRuntime deps.logback_classic
}

task itest(type: Test) {
	includes = ['**/*Itest.*', '**/*ItestSuite.*']
	testResultsDir = file("${buildDir}/itest-results")
	copyProjectPropertyToSystemProperty(project, systemProperties, 'itests')
	copyProjectPropertyToSystemProperty(project, systemProperties, 'testconfig')
	copyProjectPropertyToSystemProperty(project, systemProperties, 'testimage')
	copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.endpoint')
	copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.accessKey')
	copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.secretKey')
}

def copyProjectPropertyToSystemProperty(project, systemProperties, name) {
	if(project.hasProperty(name)) {
		systemProperties[name] = project.getProperty(name)
	}
}

test { 
	excludes = ['**/*Itest.*', '**/*ItestSuite.*', '**/acceptance/*'] 
} 
 
task acceptanceTest(type: Test) { 
	includes = ['**/acceptance/*'] 
	systemProperties = ['jythonTestBaseDir': "src/acceptance/jython"] 
	testResultsDir = file("${buildDir}/acceptance-results") 
} 

sourceSets.main.resources.srcDirs = ['src/main/resources', 'src/main/jython']
sourceSets.test.resources.srcDirs = ['src/test/resources', 'src/test/jython']

apply from: "$commonBuildPath/artifacts.gradle"
apply from: "$commonBuildPath/releaseable.gradle"
